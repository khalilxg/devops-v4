pipeline {  
    agent any  
    stages {  

            stage('mv clean & compile') {
          	    steps {
                    sh 'mvn -f /var/lib/jenkins/workspace/devops-v2/Devops_TP_achat-main/pom.xml clean'
                    sh 'mvn -f /var/lib/jenkins/workspace/devops-v2/Devops_TP_achat-main/pom.xml compile'
                }
            }
            stage ('Build') {  
                  steps{
                    sh """mvn -f /var/lib/jenkins/workspace/devops-v2/Devops_TP_achat-main/pom.xml clean"""
                    sh """mvn -f /var/lib/jenkins/workspace/devops-v2/Devops_TP_achat-main/pom.xml package"""
                    echo "build successful";
                    
                } 
            }
            stage ('Test') {  
                  steps{
                    sh """mvn -f /var/lib/jenkins/workspace/devops-v2/Devops_TP_achat-main/pom.xml test"""
                    echo "test successful";
                } 
            }
        
       	    stage('Sonarqube') {
          	  steps {
                    sh 'mvn -f /var/lib/jenkins/workspace/devops-v2/Devops_TP_achat-main/pom.xml clean deploy sonar:sonar -Dsonar.projectKey=Timesheet2 -Dsonar.host.url=http://192.168.10.11:9000 -Dsonar.login=admin -Dsonar.password=sonar'
                }
            }
            stage('Nexus') {
          	  steps {
                    sh 'mvn -f /var/lib/jenkins/workspace/devops-v2/Devops_TP_achat-main/pom.xml clean package deploy:deploy-file -DgroupId=com.esprit.examen -DartifactId=tpAchatProject -Dversion=0.0.2-SNAPSHOT -DgeneratePom=true -Dpackaging=jar -DrepositoryId=deploymentRepo -Durl=http://192.168.10.11:8081/repository/maven-snapshots/ -Dfile=target/tpAchatProject-0.0.2-SNAPSHOT.jar -Dnexus.login=admin -Dnexus.password=esprit'
                }
            }
            stage('Docker Build') {
          	  steps {
                    sh 'docker build -t khalilxg/devops-v4 .'
                    sh 'docker push khalilxg/devops-v4'
                }
            }
            stage('Push Image') {
                    withDockerRegistry([ credentialsId: "dockerHub", url: "https://registry.hub.docker.com" ]) {
                    sh 'docker push docker push khalilxg/devops-v4'
                }
            }
  }
}
